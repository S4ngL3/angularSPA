{"version":3,"sources":["./src/app/core/use-case/index.ts","./src/app/core/service/interaction.service.ts","./src/environments/environment.ts","./src/app/core/use-case/edit-to-do.use-case.ts","./src/app/core/arch/presenter.ts","./src/app/core/repository/index.ts","./src/app/core/use-case/delete-to-do.use-case.ts","./src/app/data/repository/todo-repository.service.ts","./src/app/data/data.module.ts","./src/app/presentation/presentation.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/core/entity/to-do.ts","./src/app/infrastructure/service/interaction.service.ts","./src/app/presentation/todo-list/todo-list.component.ts","./src/app/presentation/todo-list/todo-list.component.html","./src/app/core/repository/todo.repository.ts","./src/app/core/entity/index.ts","./src/app/core/arch/index.ts","./src/app/app.module.ts","./src/app/presentation/todo-list/todo-list.presenter.ts","./src/app/presentation/todo-list/todo-list.view-model.ts","./src/app/core/use-case/show-to-do-list.use-case.ts","./src/app/infrastructure/infrastructure.module.ts","./src/app/core/use-case/add-to-do.use-case.ts","./src/app/core/service/index.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["export * from './show-to-do-list.use-case';\nexport * from './edit-to-do.use-case';\nexport * from './delete-to-do.use-case';\nexport * from './add-to-do.use-case';\n","export abstract class InteractionService {\n\n    public abstract confirm(message: string): Promise<boolean>;\n\n    public abstract enterString(currentValue?: string): Promise<string>;\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import {IUseCase} from '../arch';\nimport {ToDo} from '../entity';\nimport {InteractionService} from '../service';\nimport {TodoRepository} from '../repository';\nimport {ShowToDoListUseCase} from './show-to-do-list.use-case';\nimport {Injectable} from '@angular/core';\n\nexport class EditToDoRequest {\n\n    constructor(public readonly id: number,\n                public readonly todo: ToDo,\n                public readonly onlyToggleDone: boolean = false,\n    ) {\n    }\n}\n\n@Injectable({providedIn: 'root'})\nexport class EditToDoUseCase implements IUseCase<EditToDoRequest, void> {\n    readonly presenter: void;\n\n    constructor(private readonly interaction: InteractionService,\n                private readonly repository: TodoRepository,\n                private readonly listUseCase: ShowToDoListUseCase,\n    ) {\n    }\n\n    public async execute(request: EditToDoRequest): Promise<void> {\n        try {\n            const todo = new ToDo(request.todo.description, request.todo.isDone);\n            if (request.onlyToggleDone) {\n                todo.isDone = !todo.isDone;\n            } else {\n                do {\n                    todo.description = await this.interaction.enterString(todo.description);\n                    if (todo.description == null) {\n                        return;\n                    }\n                } while (todo.description.trim() == '')\n            }\n\n            await this.repository.editToDo(request.id, todo);\n\n            await this.listUseCase.execute();\n        } catch (e) {\n            console.error('Failed to edit a todo: %o', e);\n            throw e;\n        }\n    }\n}\n","export abstract class Presenter<TView> {\n    public viewModel: TView;\n\n    constructor(private template: new() => TView,\n    ) {\n    }\n\n    public reset(): void {\n        const model = new this.template();\n\n        if (this.viewModel == null) {\n            this.viewModel = model;\n        } else {\n            Object.assign(this.viewModel, model);\n        }\n    }\n}\n","export * from './todo.repository';\n","import {IUseCase} from '../arch';\nimport {InteractionService} from '../service';\nimport {TodoRepository} from '../repository';\nimport {ShowToDoListUseCase} from './show-to-do-list.use-case';\nimport {Injectable} from '@angular/core';\n\n@Injectable({providedIn: 'root'})\nexport class DeleteToDoUseCase implements IUseCase<number, void> {\n    readonly presenter: void;\n\n    constructor(private readonly interaction: InteractionService,\n                private readonly repository: TodoRepository,\n                private readonly listUseCase: ShowToDoListUseCase,\n    ) {\n    }\n\n    public async execute(id: number): Promise<void> {\n        try {\n            if (!await this.interaction.confirm('Soll die Aufgabe gelöscht werden?')) {\n                return;\n            }\n\n            await this.repository.deleteToDo(id);\n\n            await this.listUseCase.execute();\n        } catch (e) {\n            console.error('Failed to delete a todo: %o', e);\n            throw e;\n        }\n    }\n\n}\n","import {Injectable} from '@angular/core';\nimport {TodoRepository} from '../../core/repository';\nimport {ToDo} from '../../core/entity';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TodoRepositoryService extends TodoRepository {\n\n  private toDos: ToDo[] = [];\n\n  public async createToDo(todo: ToDo): Promise<ToDo> {\n    this.toDos.push(todo);\n    return this.toDos[this.toDos.length - 1];\n  }\n\n  public async deleteToDo(id: number): Promise<void> {\n    if (this.toDos[id] === null) {\n      throw new Error('Diese Aufgabe existiert nicht.');\n    }\n\n    this.toDos.splice(id, 1);\n\n    return;\n  }\n\n  public async editToDo(id: number, todo: ToDo): Promise<ToDo> {\n    if (this.toDos[id] === null) {\n      throw new Error('Diese Aufgabe existiert nicht.');\n    }\n\n    this.toDos[id] = todo;\n    return this.toDos[id];\n  }\n\n  public async getAllToDos(): Promise<ToDo[]> {\n    return this.toDos;\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TodoRepository} from '../core/repository';\nimport {TodoRepositoryService} from './repository/todo-repository.service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    {provide: TodoRepository, useClass: TodoRepositoryService}\n  ]\n})\nexport class DataModule {\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {TodoListComponent} from './todo-list/todo-list.component';\nimport {ShowToDoListPresenter} from '../core/use-case';\nimport {TodoListPresenter} from './todo-list/todo-list.presenter';\n\n@NgModule({\n  declarations: [\n    TodoListComponent,\n  ],\n  imports: [\n    CommonModule,\n  ],\n  exports: [\n    TodoListComponent,\n  ],\n  providers: [\n    {provide: ShowToDoListPresenter, useClass: TodoListPresenter}\n  ]\n})\nexport class PresentationModule {\n}\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'todo-app';\n}\n","<h1>My Tasks</h1>\n<app-todo-list></app-todo-list>\n","export class ToDo {\n    constructor(public description: string,\n                public isDone: boolean = false,\n    ) {\n    }\n}\n","import {Injectable} from '@angular/core';\nimport * as CoreService from '../../core/service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class InteractionService implements CoreService.InteractionService {\n\n  public async confirm(message: string): Promise<boolean> {\n    return confirm(message);\n  }\n\n  public async enterString(currentValue?: string): Promise<string> {\n    return prompt('Input:', currentValue);\n  }\n}\n","import {Component} from '@angular/core';\nimport {\n  AddToDoUseCase,\n  DeleteToDoUseCase,\n  EditToDoUseCase,\n  ShowToDoListPresenter,\n  ShowToDoListUseCase\n} from '../../core/use-case';\nimport {TodoListViewModel} from './todo-list.view-model';\nimport {ToDo} from '../../core/entity';\n\n@Component({\n  selector: 'app-todo-list',\n  templateUrl: './todo-list.component.html',\n  styleUrls: ['./todo-list.component.css']\n})\nexport class TodoListComponent {\n\n  constructor(private readonly useCase: ShowToDoListUseCase,\n              public readonly presenter: ShowToDoListPresenter<TodoListViewModel>,\n              private readonly addToDoUseCase: AddToDoUseCase,\n              private readonly editToDoUseCase: EditToDoUseCase,\n              private readonly deleteToDoUseCase: DeleteToDoUseCase,\n  ) {\n    presenter.reset();\n\n    useCase.execute();\n  }\n\n  public addToDo() {\n    this.addToDoUseCase.execute();\n  }\n\n  public setToDoState(id: number, todo: ToDo) {\n    this.editToDoUseCase.execute({id, todo, onlyToggleDone: true})\n  }\n\n  public editToDo(id: number, todo: ToDo) {\n    this.editToDoUseCase.execute({id, todo, onlyToggleDone: false})\n  }\n\n  public deleteToDo(id: number) {\n    this.deleteToDoUseCase.execute(id);\n  }\n}\n","<button (click)='addToDo()'>Aufgabe hinzufügen</button>\n<ul>\n  <li *ngFor='let todo of presenter.viewModel.toDos; index as id'>\n    <label>\n      <input type='checkbox' [checked]='todo.isDone' (change)='setToDoState(id, todo)'>\n      {{ todo.description }}\n    </label>\n    <button (click)='editToDo(id, todo)'>Edit</button>\n    <button (click)='deleteToDo(id)'>Delete</button>\n  </li>\n</ul>\n","import {ToDo} from '../entity';\n\nexport abstract class TodoRepository {\n    public abstract getAllToDos(): Promise<ToDo[]>;\n\n    public abstract createToDo(todo: ToDo): Promise<ToDo>;\n\n    public abstract editToDo(id: number, todo: ToDo): Promise<ToDo>;\n\n    public abstract deleteToDo(id: number): Promise<void>;\n}\n","export * from './to-do';\n","export * from './use-case';\nexport * from './presenter';\n","import {BrowserModule} from '@angular/platform-browser';\nimport {NgModule} from '@angular/core';\n\nimport {AppComponent} from './app.component';\nimport {PresentationModule} from './presentation/presentation.module';\nimport {DataModule} from './data/data.module';\nimport {InfrastructureModule} from './infrastructure/infrastructure.module';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n  ],\n  imports: [\n    BrowserModule,\n    DataModule,\n    PresentationModule,\n    InfrastructureModule,\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule {\n}\n","import {ShowToDoListPresenter} from '../../core/use-case';\nimport {TodoListViewModel} from './todo-list.view-model';\nimport {ToDo} from '../../core/entity';\nimport { Injectable } from \"@angular/core\";\n\n@Injectable()\nexport class TodoListPresenter extends ShowToDoListPresenter<TodoListViewModel> {\n\n  constructor() {\n    super(TodoListViewModel);\n  }\n\n  public displayToDos(toDos: ToDo[]): void {\n    this.viewModel.toDos = toDos;\n  }\n}\n","import {ToDo} from '../../core/entity';\n\nexport class TodoListViewModel {\n  public toDos: ToDo[] = null;\n}\n","import {IUseCase, Presenter} from '../arch';\nimport {ToDo} from '../entity';\nimport {TodoRepository} from '../repository';\nimport {Injectable} from '@angular/core';\n\nexport abstract class ShowToDoListPresenter<T> extends Presenter<T> {\n  public abstract displayToDos(toDos: ToDo[]): void;\n}\n\n@Injectable({providedIn: 'root'})\nexport class ShowToDoListUseCase implements IUseCase<void, ShowToDoListPresenter<any>> {\n\n  constructor(public readonly presenter: ShowToDoListPresenter<any>,\n              private readonly repository: TodoRepository,\n  ) {\n  }\n\n  public async execute(request: void): Promise<void> {\n    try {\n      const allToDos = await this.repository.getAllToDos();\n      this.presenter.displayToDos(allToDos);\n    } catch (e) {\n      console.error('Failed to load or present to dos: %o', e);\n      throw e;\n    }\n  }\n}\n","import {NgModule} from '@angular/core';\nimport {CommonModule} from '@angular/common';\nimport {InteractionService} from './service/interaction.service';\nimport * as CoreService from '../core/service';\n\n@NgModule({\n  declarations: [],\n  imports: [\n    CommonModule\n  ],\n  providers: [\n    {provide: CoreService.InteractionService, useClass: InteractionService},\n  ]\n})\n\nexport class InfrastructureModule {\n}\n","import {IUseCase} from '../arch';\nimport {ShowToDoListUseCase} from './show-to-do-list.use-case';\nimport {InteractionService} from '../service';\nimport {TodoRepository} from '../repository';\nimport {ToDo} from '../entity';\nimport {Injectable} from '@angular/core';\n\n@Injectable({providedIn: 'root'})\nexport class AddToDoUseCase implements IUseCase<void, void> {\n  public readonly presenter: void;\n\n  constructor(private readonly interaction: InteractionService,\n              private readonly repository: TodoRepository,\n              private readonly listUseCase: ShowToDoListUseCase,\n  ) {\n  }\n\n  public async execute(request: void): Promise<void> {\n\n    try {\n      const description = await this.interaction.enterString();\n      if (description == null || description.trim() === '') {\n        return;\n      }\n\n      const todo = new ToDo(description);\n      await this.repository.createToDo(todo);\n\n      await this.listUseCase.execute();\n    } catch (e) {\n      console.error('Failed to create a todo: %o', e);\n      throw e;\n    }\n\n  }\n}\n","export * from './interaction.service';\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}